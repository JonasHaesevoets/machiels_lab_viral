---
title: "final_march2024_joint_analysis"
format: 
  html:
    code-fold: true
editor: visual
toc: true
execute:
  warning: false
  message: false
---

# 28-03 Lucia presentation

# 1) Load in data and packages and load in functions

```{r}
easypackages::libraries("DESeq2","Seurat","tidyverse", "SeuratWrappers", "ggExtra", "textTinyR", "patchwork", "pheatmap", "ggrepel", "tidyseurat", "ggpubr", "viridis", "writexl", "readxl", "presto", "scCustomize", "qs", "sctransform","glmGamPoi", "clusterProfiler", "enrichplot")
obj.v5 <- read_rds("../../Documents/machiels_lab_viral/intermediate_data/seurat_obj_central.rds")
DefaultAssay(obj.v5) <- "RNA"


# The palette with grey:
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
          "#F0E442", "#0072B2", "#D55E00", "#CC79A7")

# The palette with black:
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
          "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
```

#### This function takes a Seurat object or data frame (`seurat_tbl`) as input, calculates counts based on various factors, converts certain columns to factors, filters out specific conditions, calculates proportions of samples in a cluster, and then calculates z-scores of frequencies per cluster. Finally, it returns a modified data frame with these calculated values.

```{r}
make_zscore_and_freq_data <- function(seurat_tbl) {
  # Calculate counts of observations based on various factors
  # Parameters:
  #   seurat_tbl: A Seurat object or data frame containing the data
  # Returns:
  #   A modified data frame with z-scores and frequencies calculated
  
  seurat_tbl |> 
    dplyr::count(day_mock, sample_type, condition, sample_tag_ms4a3_pos_gabbr2, harmony_cluster_8dims_rough, .drop = FALSE) |> 
    # Make columns factors
    mutate(
      day_mock = factor(day_mock, levels = c("Mock", "d8", "d60")),
      sample_type = factor(sample_type, levels = c("lung", "bal")),
      condition = as_factor(condition),
      sampletag_Ms4a3 = as_factor(sample_tag_ms4a3_pos_gabbr2),
      harmony_cluster_8dims_rough = as_factor(harmony_cluster_8dims_rough)
    ) |> 
    # Filter out specific conditions on Mock day
    filter(!(day_mock == "Mock" & (condition %in% c("PR8", "MuHV4", "PVM", "MAV1")))) |> 
    # Calculate proportions of samples in a given cluster
    group_by(day_mock, sample_type, condition, sample_tag_ms4a3_pos_gabbr2) |> 
    mutate(freq_cluster = n / sum(n)) |> 
    # Calculate z-score of frequencies per cluster
    group_by(harmony_cluster_8dims_rough) |> 
    mutate(cluster_frequency_zscore = (freq_cluster - mean(freq_cluster)) / sd(freq_cluster))
}

```

#### This function takes a data frame (`x`) containing the necessary columns for plotting and creates a heatmap using ggplot2. It maps `condition` to the x-axis, `harmony_cluster_8dims_rough` to the y-axis, and `cluster_frequency_zscore` to the fill color. The heatmap is then faceted based on `sample_tag_ms4a3_pos_gabbr2`, `sample_type`, and `day_mock`. Axis text on the x-axis is rotated by 45 degrees for better readability. Finally, the color gradient for the fill is set to blue (low values), white (mid values), and red (high values).

```{r}
frequency_heatmap <- function(x){ 
  x |>   ggplot(aes(condition,
                    harmony_cluster_8dims_rough,
                    fill=cluster_frequency_zscore)) +
  geom_tile()+ 
  #scale_fill_viridis()+theme_bw() +
  ggh4x::facet_nested_wrap(
    vars(sample_tag_ms4a3_pos_gabbr2,
         sample_type,
         day_mock),
    nrow = 1,
    drop = TRUE,
    scales = "free_x"#,
    #space="free"
    )+
    theme_bw()+
    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
    scale_fill_gradient2( low = "blue", mid = "white", high = "red")}
```

#### this function selects the n amount of top differentially expressed genes in descending order in terms of avg_log2 fold change

```{r}
select_top_genes <- function(df, n = 5) {
  top_genes <- by(df, df$cluster, function(cluster_df) {
    cluster_df[order(cluster_df$avg_log2FC, decreasing = TRUE), ][1:n, ]
  })
  do.call(rbind, top_genes)
}
```

#### this function as a sanity checker to see if the data is correctly initialized

```{r}
check_metadata_presence <- function(seurat_object, metadata_column, value_to_check) {
  # Check if the specified value is present in the specified metadata colu
    value_present <- any(str_detect(seurat_object@meta.data[[metadata_column]], value_to_check))

  if(value_present) {
    print(paste(value_to_check, "values are present in the", metadata_column, "metadata column."))
  } else {
    print(paste(value_to_check, "values are not present in the", metadata_column, "metadata column."))
  }
  
  return(value_present)
}



```

# **2) Integrate macrophages of all datasets into a combined embedding (umap)**

## 2a) Show the K nearest neighbour clusters

```{r}
obj.v5 |> DimPlot(group.by = "harmony_cluster_8dims_rough", label=T)
ggsave("clusters_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG")
```

### Show the embeddings of lung and bal cells from the different timepoints

```{r}
obj.v5  |> ggplot(aes(umapharmony8dims_1,umapharmony8dims_2, 
                      color=day_mock_sample_type_mockTissueIncluded))+
  geom_point(aes(color="cell"))+
  geom_density_2d(bins=20,linewidth=1)+
  scale_color_manual(values = cbp1)+ theme_bw()+
  ggtitle("local density of sample in umap embedding")
ggsave("Density_clusters_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG", width = 30, height = 20)
```

```{r}
#| fig-width: 18
#| fig-height: 10
obj.v5  |>
  ggplot(aes(umapharmony8dims_1,
             umapharmony8dims_2,
             color=day_mock_sample_type_mockTissueIncluded)) +
  geom_point(aes(color="cell")) +
  geom_density_2d(bins=20,linewidth=1) +
  scale_color_manual(values = cbp1 )+
  theme_bw() +
  ggtitle("local density of sample in umap embedding")+
  facet_wrap(~day_mock_sample_type_mockTissueIncluded)
ggsave("Density_tissueDays_clusters_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG", width = 18, height = 10)
```

```{r}
#| fig-width: 18
#| fig-height: 18
samples <- obj.v5$day_mock_sample_type_mockTissueIncluded |> unique()
umap_sampletype_mock_point_plotlist <- list()
for (sample in samples) {
  obj.v5_filtered_for_sample <- obj.v5 |> as_tibble( ) |> filter(day_mock_sample_type_mockTissueIncluded==sample)
  obj.v5_not_sample <- obj.v5 |> as_tibble( ) |> filter(day_mock_sample_type_mockTissueIncluded!=sample)
  
  umap_sampletype_mock_point_plotlist[[sample]] <- obj.v5 |> 
    ggplot() +
    geom_point(data= obj.v5_not_sample,aes(umapharmony8dims_1,umapharmony8dims_2),color="grey")+
    geom_point(data= obj.v5_filtered_for_sample,aes(umapharmony8dims_1,umapharmony8dims_2),
               color="red",
               alpha=0.4,
               #plot points without outer border without alpha
               stroke = 0,
               shape=16)+
    theme_bw()+
    scale_fill_continuous(type = "viridis")+
    ggtitle(sample)+theme_bw()
}

ggarrange(plotlist = umap_sampletype_mock_point_plotlist)
ggsave("tissueDays_clusters_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG", width = 18, height = 10)
```

```{r}
#| fig-width: 18
#| fig-height: 18
samples <- obj.v5$day_mock_sample_type_mockTissueIncluded |> unique()
umap_sampletype_mock_dens_plotlist <- list()
for (sample in samples) {
  obj.v5_filtered_for_sample <- obj.v5 |> as_tibble( ) |> filter(day_mock_sample_type_mockTissueIncluded==sample)
  umap_sampletype_mock_dens_plotlist[[sample]] <- obj.v5 |> 
    ggplot(aes(umapharmony8dims_1,umapharmony8dims_2) ) +
    geom_point()+
    stat_density_2d(data= obj.v5_filtered_for_sample, 
                    aes(x= umapharmony8dims_1,
                        y=umapharmony8dims_2,
                        fill = after_stat(level)), geom = "polygon",contour_var = "ndensity"
                    )+
    theme_bw()+
    scale_fill_continuous(type = "viridis")+
    ggtitle(sample)+theme_bw()
}

#densities have to be adjusted, overlap
#https://stackoverflow.com/questions/76533721/plot-only-top-layers-of-ggplot-stat-density-2d-geom-density-2d-in-r

ggarrange(plotlist =umap_sampletype_mock_dens_plotlist)
ggsave("density2_tissueDays_clusters_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG", width = 18, height = 10)
```

### Show the embeddings of Ms4a3 neg and Ms4a3 pos

```{r}

samples <- obj.v5$sampletag_Ms4a3 |> unique()
umap_sampletag_Ms4a3_point_plotlist <- list()
for (sample in samples) {
  obj.v5_filtered_for_sample <- obj.v5 |> as_tibble( ) |> filter(sampletag_Ms4a3==sample)
  obj.v5_not_sample <- obj.v5 |> as_tibble( ) |> filter(sampletag_Ms4a3!=sample)
  
  umap_sampletag_Ms4a3_point_plotlist[[sample]] <- obj.v5 |> 
    ggplot() +
    geom_point(data= obj.v5_not_sample,aes(umapharmony8dims_1,umapharmony8dims_2),color="grey")+
    geom_point(data= obj.v5_filtered_for_sample,aes(umapharmony8dims_1,umapharmony8dims_2),
               color="red",
               alpha=0.4,
               #plot points without outer border without alpha
               stroke = 0,
               shape=16)+
    theme_bw()+
    scale_fill_continuous(type = "viridis")+
    ggtitle(sample)+theme_bw()
}

ggarrange(plotlist = umap_sampletag_Ms4a3_point_plotlist)
ggsave("Ms4a3Embeddings_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG")
```

```{r}

samples <- obj.v5$sampletag_Ms4a3 |> unique()
umap_sampletag_Ms4a3_dens_plotlist <- list()
for (sample in samples) {
  obj.v5_filtered_for_sample <- obj.v5 |> as_tibble( ) |> filter(sampletag_Ms4a3==sample)
  umap_sampletag_Ms4a3_dens_plotlist[[sample]] <- obj.v5 |> 
    ggplot(aes(umapharmony8dims_1,umapharmony8dims_2) ) +
    geom_point()+
    stat_density_2d(data= obj.v5_filtered_for_sample, 
                    aes(x= umapharmony8dims_1,
                        y=umapharmony8dims_2,
                        fill = after_stat(level)), geom = "polygon",contour_var = "ndensity"
                    )+
    theme_bw()+
    scale_fill_continuous(type = "viridis")+
    ggtitle(sample)+theme_bw()
}

#densities have to be adjusted, overlap
#https://stackoverflow.com/questions/76533721/plot-only-top-layers-of-ggplot-stat-density-2d-geom-density-2d-in-r

ggarrange(plotlist =umap_sampletag_Ms4a3_dens_plotlist)
ggsave("Density_Ms4a3Embeddings_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG")
```

### Show embeddings of the different viral conditions as well as the mock

```{r}
#| fig-width: 18
#| fig-height: 18
samples <- obj.v5$condition |> unique()
umap_condition_plotlist <- list()
for (sample in samples) {
  obj.v5_filtered_for_sample <- obj.v5 |> as_tibble( ) |> filter(condition==sample)
  obj.v5_not_sample <- obj.v5 |> as_tibble( ) |> filter(condition!=sample)
  
  umap_condition_plotlist[[sample]] <- obj.v5 |> 
    ggplot() +
    geom_point(data= obj.v5_not_sample,aes(umapharmony8dims_1,umapharmony8dims_2),color="grey")+
    geom_point(data= obj.v5_filtered_for_sample,aes(umapharmony8dims_1,umapharmony8dims_2),
               color="red",
               alpha=0.4,
               #plot points without outer border without alpha
               stroke = 0,
               shape=16)+
    theme_bw()+
    scale_fill_continuous(type = "viridis")+
    ggtitle(sample)+theme_bw()
}

ggarrange(plotlist = umap_condition_plotlist)
ggsave("conditionsEmbeddings_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG", height = 18, width = 18)
```

### Show individual embeddings of the samples, **individual samples (virus per time point)**

```{r}
#| fig-width: 18
#| fig-height: 18
samples <- obj.v5$sampletag_name |> unique()
umap_sampletag_name_plotlist <- list()
for (sample in samples) {
  obj.v5_filtered_for_sample <- obj.v5 |> as_tibble( ) |> filter(sampletag_name==sample)
  obj.v5_not_sample <- obj.v5 |> as_tibble( ) |> filter(sampletag_name!=sample)
  
  umap_sampletag_name_plotlist[[sample]] <- obj.v5 |> 
    ggplot() +
    geom_point(data= obj.v5_not_sample,
               aes(umapharmony8dims_1,umapharmony8dims_2),
               color="grey")+
    geom_point(data= obj.v5_filtered_for_sample,
               aes(umapharmony8dims_1,umapharmony8dims_2),
               color="red",
               alpha=0.4,
               #plot points without outer border without alpha
               stroke = 0,
               shape=16)+
    theme_bw()+
    scale_fill_continuous(type = "viridis")+
    ggtitle(sample)+theme_bw()
}

ggarrange(plotlist = umap_sampletag_name_plotlist)
ggsave("sample_Embeddings_originalIntegratedSeuratObject.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/seuratOG", height = 18, width = 18)
```

# 3) Heatmaps RNA-seq Abseq for markers

### Heatmaps Abseq for SiglecF and Cd11c

```{r}
obj.v5 |>
  join_features(c("Siglecf-AbSeq", "Cd11c"),assay="adt", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_adt)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +ggtitle("mean dsb-normalized protein counts, z-score of cluster averages per marker")
ggsave("ADT_mean dsb-normalized protein counts, z-score of cluster averages per marker.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG")
```

### Heatmaps RNA for alveolar markers

```{r}
obj.v5 |>
  join_features(c("Pparg", "Chil3", "Fabp5", "Flt1", "Fabp4", "Siglecf", "Car4", "Ear1", "Krt79", "Itgax", "SiglecF"),assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +ggtitle("mean dsb-normalized protein counts, z-score of cluster averages per marker")
ggsave("RNA_mean dsb-normalized protein counts, z-score of cluster averages per marker.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG")
```

### Heatmaps RNA for alveolar markers no fabp5

**Fabp5 is highly and selectively expressed in macrophages among immune cells and is the Fabp family member most highly expressed in macrophages. Fabp5 deficiency significantly increases M2 polarization. Lyzs-Fabp5KO AAI mice exhibited increased infiltration of eosinophils in the lungs, more anti-OVA IgE in the sera, increased lung fibrosis, increased expressions of M2 marker molecules, and airway hyper-responsiveness to inhaled methacholine. Therefore, myeloid-specific deletion of Fabp5 aggravates allergic asthma, likely by regulating macrophage M2 polarization, although our present results do not exclude the potential involvement of neutrophils and DCs in this process.**

In summary, Fabp5 deficiency in myeloid cells exacerbates OVA-induced AAI in mice and increases macrophage M2 polarization. Interestingly, FABP5 selectively regulates the accumulation of long-chain unsaturated FAs, such as oleic acid, in macrophages. Unexpectedly, excessive uptake of oleic acid leads to increased M2 polarization in BALF and significantly aggravates AAI pathogenesis, suggesting that high dietary levels of oleic acid may exacerbate allergic asthma. Furthermore, Fabp5 deficiency activates PPARg, causing a series of metabolic reactions that include FA b oxidation, the TCA cycle, and oxidative phosphorylation, producing more ATP, and enhancing STAT6 activation to promote M2 polarization and M2-related allergic asthma.

```{r}
obj.v5 |>
  join_features(c("Pparg", "Chil3", "Flt1", "Fabp4", "Siglecf", "Car4", "Ear1", "Krt79", "Itgax", "SiglecF"),assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +ggtitle("mean dsb-normalized protein counts, z-score of cluster averages per marker")
ggsave("RNA_noFabp5_mean dsb-normalized protein counts, z-score of cluster averages per marker.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG")
```

# 4) Compositional Analysis

## 4A) cluster frequencies per group

```{r}
p1 <- obj.v5 |>  as_tibble()  |> filter(sample_tag_ms4a3_pos_gabbr2!= "Gabbr2_pos_Ms4a3_neg") |>  make_zscore_and_freq_data() |>
  mutate(individual_sample=paste(day_mock,
                                 sample_type,
                                 condition,
                                 sample_tag_ms4a3_pos_gabbr2,
                                 sep = "_")) |> 
  ggplot(aes(individual_sample,freq_cluster,color=condition)) + geom_point()+   facet_wrap(~harmony_cluster_8dims_rough, scales = "free", nrow=1) +theme(axis.text.x = element_blank(), axis.title = element_blank())
p1

p2 <- obj.v5 |>  as_tibble()  |> filter(sample_tag_ms4a3_pos_gabbr2!= "Gabbr2_pos_Ms4a3_neg") |>  make_zscore_and_freq_data() |>
  mutate(individual_sample=paste(day_mock,sample_type, condition,sample_tag_ms4a3_pos_gabbr2, sep = "_")) |> 
  ggplot(aes(individual_sample,freq_cluster,color=day_mock)) + geom_point()+  facet_wrap(~harmony_cluster_8dims_rough, scales = "free", nrow=1)+ theme(axis.text.x = element_blank(), axis.title = element_blank())

p3 <- obj.v5 |>  as_tibble()  |> filter(sample_tag_ms4a3_pos_gabbr2!= "Gabbr2_pos_Ms4a3_neg") |>  make_zscore_and_freq_data() |>
  mutate(individual_sample=paste(day_mock,sample_type, condition,sample_tag_ms4a3_pos_gabbr2, sep = "_")) |> 
  ggplot(aes(individual_sample,freq_cluster,color=sample_type)) + geom_point()+
 facet_wrap(~harmony_cluster_8dims_rough, scales = "free", nrow=1) +theme(axis.text.x = element_blank(), axis.title = element_blank())

p4 <- obj.v5 |>  as_tibble()  |> filter(sample_tag_ms4a3_pos_gabbr2!= "Gabbr2_pos_Ms4a3_neg") |>  make_zscore_and_freq_data() |>
  mutate(individual_sample=paste(day_mock,sample_type, condition,sample_tag_ms4a3_pos_gabbr2, sep = "_")) |> 
  ggplot(aes(individual_sample,freq_cluster,color=sample_tag_ms4a3_pos_gabbr2)) + geom_point()+scale_color_brewer()+ facet_wrap(~harmony_cluster_8dims_rough, scales = "free", nrow=1, strip.position="bottom") + #x_axis_text_90+
   theme_classic()+
  theme(axis.text.x = element_blank(), axis.title = element_blank())

(p1 + theme(strip.text.x = element_blank()))/
  (p2+theme(strip.text.x = element_blank()))/
  (p3+theme(strip.text.x = element_blank()))/
  p4 +
  plot_layout(guides = 'collect')
ggsave(filename = "cluster frequencies per group.png",path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG",  height = 20, width = 30, units = "cm")

```

## 4b) **Z-scores of cluster frequencies: heatmap**

fix bug in it by specifying group by and count were used from the dplyr package it was not assumed

```{r}
obj.v5 |> 
  as_tibble() |>  # Convert obj.v5 to a tibble
  separate(orig.ident, sep = "__", into = c("day", "sample_type"), remove = FALSE) |> 
  mutate(day=str_replace_all(day,c("viral.experiment.1"="d60",
                                   "viral.experiment.2"="d8") )) |> 
  mutate(day=ifelse(condition=="Mock",condition,day)) |> 
  mutate(day=factor(day, levels=c("Mock", "d8","d60")),
         sample_type=as_factor(sample_type),
         condition=as_factor(condition),
         sampletag_Ms4a3=as_factor(sampletag_Ms4a3),
         harmony_cluster_8dims_rough=as_factor(harmony_cluster_8dims_rough)
         ) |> 
  dplyr::group_by(day,sample_type, condition,sampletag_Ms4a3,harmony_cluster_8dims_rough) |> 
  dplyr::count(day,sample_type, condition,sampletag_Ms4a3,harmony_cluster_8dims_rough, .drop = FALSE) |> 
  mutate(sample=paste(day,sample_type,condition,sampletag_Ms4a3)) |> 
  group_by(sample) |> 
  filter(!(day=="Mock"&(condition %in%c("PR8","MuHV4", "PVM", "MAV1")))) |> 
  mutate(freq_cluster=n/sum(n)) |> 
  mutate(condition=as.character(condition)) |> 
  na.omit() |>  # This is where the error occurs, likely because the object isn't a data frame or tibble
  group_by(harmony_cluster_8dims_rough) |> 
  mutate(cluster_mean_freq=mean(freq_cluster)) |> 
  mutate(cluster_mean_freq_zscore=(freq_cluster-cluster_mean_freq)/sd(freq_cluster)) |> 
  ggplot(aes(condition,harmony_cluster_8dims_rough, fill=cluster_mean_freq_zscore)) +
  geom_tile()+ 
  ggh4x::facet_nested_wrap(
    vars(sampletag_Ms4a3,sample_type ,day), nrow = 1,drop = TRUE,scales = "free_x"
  )+theme_bw()+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))   + scale_fill_gradient2(  low = "blue",
  mid = "white",
  high = "red")+ggtitle("proportions of cells from a given sample distributed across clusters ",
                        "Ms4a3 classification as sorted")

ggsave(filename = "proportions of cells from a given sample distributed across clusters.png",path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG",  height = 20, width = 30, units = "cm")
```

# 5) Finding cluster markers for full integrated object (obj.v5)

```{r, echo=FALSE}
# markers_all <- FindAllMarkers(obj.v5,
#                           assay = "RNA", 
#                           logfc.threshold = 0.5,
#                           test.use = "wilcox", 
#                           min.pct = 0.2)

```

```{r}
# markers_d60_alveolar_filtered = markers_d60_alveolar[markers_d60_alveolar$avg_log2FC > 1,]
# nonsignficant_p_adj_d60_alveolar <- which(markers_d60_alveolar_filtered$p_val_adj <= 0.05)
# markers_d60_alveolar_filtered <- markers_d60_alveolar_filtered[nonsignficant_p_adj_d60_alveolar, ]
# write_xlsx(markers_d60_alveolar_filtered, path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/all_markers_filtered_alveolarD60_recluster.xlsx")
```

```{r}
# markers_filtered_all = readxl::read_xlsx("../../Documents/machiels_lab_viral/output/markers_all_filtered.xlsx") 
# top_20_all <- select_top_genes(markers_filtered_all, n = 20)
# write_xlsx(top_20_all, "../../Documents/machiels_lab_viral/output/top_20_all_correct.xlsx")
```

# 6) Reclustering of alveolar macrophages at d60 (clusters 0 1 5 6 7)

seurat_d60_alveolar_1 contains no mock

```{r}
seurat_d60 = obj.v5 %>% filter(str_detect(day_factor, "d60"))
seurat_d60_1 = seurat_d60  %>% filter(!str_detect(day_mock_sample_type, "Mock"))
seurat_d60_1_alveolar =  subset(seurat_d60_1, idents = c(0,1,5,6,7))
seurat_d60_1_alveolar = seurat_d60_1_alveolar %>%  filter(!str_detect(day_sample_type_cond_ms4a3_pos_gabbr2, "Gabbr2_pos_Ms4a3_neg"))
DimPlot(seurat_d60_1_alveolar, label = T)
ggsave("dimplot_original.png", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## 6a) Sanity checks to see if the new seurat object is correctly initialized

```{r}
# check if it contains bal and lung samples
metadata_column <- "day"  
value_to_check <- "d8"    
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
metadata_column = "day_sample_type_cond_ms4a3_pos_gabbr2"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)

value_to_check = "d60"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
value_to_check = "bal"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
metadata_column = "sample_type"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
value_to_check = "lung"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
metadata_column = "day_sample_type_cond_ms4a3_pos_gabbr2"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
value_to_check = "Mock"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
metadata_column = "condition"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
metadata_column = "day_mock_sample_type_mockTissueIncluded"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
metadata_column = "day"
value_present <- check_metadata_presence(seurat_d60_1_alveolar, metadata_column, value_to_check)
```

## 6b) reclustering of alveolar clusters at d60, UMAP stored as umap.harmony_8dims_reclusterumap.harmony_8dims_recluster

```{r, echo=FALSE}
# seurat_d60_1_alveolar = SCTransform(seurat_d60_1_alveolar, vst.flavor = 'v2')
# seurat_d60_1_alveolar <- FindNeighbors(seurat_d60_1_alveolar,  assay = "SCT", graph.name = "harmony_cluster_8dims_rough")  
# seurat_d60_1_alveolar <- FindClusters(seurat_d60_1_alveolar, resolution = 0.25, cluster.name = "harmony_cluster_8dims_rough", graph.name = "harmony_cluster_8dims_rough" )
# seurat_d60_1_alveolar <- RunUMAP(seurat_d60_1_alveolar, reduction = "integrated.harmony", dims = 1:8, reduction.name = "umap.harmony_8dims_recluster", assay = "SCT")
# seurat_d60_1_alveolar@reductions$umap.harmony_8dims_recluster
# DimPlot(seurat_d60_1_alveolar, label = TRUE, group.by = "harmony_cluster_8dims_rough_res.0.25")
# ggsave("dimplot_recluster.png", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")

```

```{r, echo=FALSE}
seurat_d60_1_alveolar = FindVariableFeatures(seurat_d60_1_alveolar)
seurat_d60_1_alveolar = NormalizeData(seurat_d60_1_alveolar)
seurat_d60_1_alveolar = ScaleData(seurat_d60_1_alveolar)
seurat_d60_1_alveolar <- FindNeighbors(seurat_d60_1_alveolar, reduction = "integrated.harmony", dims = 1:8)
seurat_d60_1_alveolar <- FindClusters(seurat_d60_1_alveolar, cluster.name = "harmony_cluster_8dims_rough", resolution = 0.25)

seurat_d60_1_alveolar <- RunUMAP(seurat_d60_1_alveolar, reduction = "integrated.harmony", dims = 1:8, reduction.name = "umap.harmony_8dims_recluster")
seurat_d60_1_alveolar|> DimPlot(group.by = "harmony_cluster_8dims_rough", label=T)
```

scCustomize package used instead to generate the featureplots, the standard feature plots generated using Seurat have non expressing cells as part of the same color scale. In featureplot_scCustomize the parameter na_cutoff is used to plot only positive non-zero values using color scale and zero/negative values as NA. To plot all values using color palette set to `NA`.

## 6c) dimplots for Ms4a3 + -

```{r}
DimPlot_scCustom(seurat_d60_1_alveolar, split.by = "condition", colors_use = c("purple", "cyan", "lightgreen", "red", "orange", "blue", "pink"))
ggsave("dimplot_virus.png", width = 20, height = 30, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## 6d)dimplots for tissue

```{r}
DimPlot_scCustom(seurat_d60_1_alveolar, split.by = "condition", group.by = "sample_type",colors_use = c("green", "red"))
ggsave("dimplot_virusGroupedTissue.png", width = 20, height = 30, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## 6e) dimplots for Ms4a3 + -

```{r}
DimPlot_scCustom(seurat_d60_1_alveolar, split.by = "condition", group.by = "sampletag_Ms4a3", colors_use = c("cyan", "orange") )
ggsave("dimplot_virusGroupedMs4a3.png", width = 20, height = 30, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## 6f) AbSeq Featureplots of H2-ab1 Itgax Pparg SiglecF and CD274 for Ms4a3 + -

```{r}
DefaultAssay(seurat_d60_1_alveolar) = "adt"
umap_am_alveolar_d60 <- list()
pallet = viridis(n = 10, option = "D")
genes_AM <- c("H2-ia-ie-AbSeq", "Cd11c", "Siglecf-AbSeq", "Cd274-AbSeq")

markers_am = unique(genes_AM)
for (i in markers_am) {
  plot <- FeaturePlot_scCustom(seurat_d60_1_alveolar,  features = i, label = TRUE, label.size = 5,  split.by = "sampletag_Ms4a3", colors_use = pallet, label_feature_yaxis = FALSE)
  umap_am_alveolar_d60[[i]] <- plot
}
# Arrange plots using ggarrange
ggarrange(plotlist = umap_am_alveolar_d60, nrow = 4)
ggsave("abseq_featureplot_AM_alveolar_Ms4a3_scCustomize.png", width = 60, height = 90, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## 6g) RNA Featureplots of H2-ab1 Itgax Pparg SiglecF and CD274 for Ms4a3 + -

```{r}
DefaultAssay(seurat_d60_1_alveolar) = "RNA"
genes_AM <- c("H2-Ab1", "Itgax", "Pparg", "Siglecf", "Cd274")

umap_am_alveolar_d60 <- list()
pallet = viridis(n = 10, option = "D")

markers_am = unique(genes_AM)
for (i in markers_am) {
  plot <- FeaturePlot_scCustom(seurat_d60_1_alveolar,   features = i, label = TRUE, label.size = 5,  split.by = "sampletag_Ms4a3", colors_use = pallet, label_feature_yaxis = FALSE)
  umap_am_alveolar_d60[[i]] <- plot
}
# Arrange plots using ggarrange
ggarrange(plotlist = umap_am_alveolar_d60, nrow = 5)
ggsave("featureplot_AM_alveolar_Ms4a3_scCustomize.png", width = 60, height = 90, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## 6h) AbSeq Featureplots of H2-ab1 Itgax Pparg SiglecF and CD274 for Ms4a3 + -

```{r}
DefaultAssay(seurat_d60_1_alveolar) = "adt"
genes_AM <- c("H2-ia-ie-AbSeq", "Cd11c", "Siglecf-AbSeq", "Cd274-AbSeq")

umap_am_alveolar_d60 <- list()
pallet = viridis(n = 10, option = "D")

markers_am = unique(genes_AM)
for (i in markers_am) {
  plot <- FeaturePlot_scCustom(seurat_d60_1_alveolar,   features = i, label = TRUE, label.size = 5,  split.by = "sample_type", colors_use = pallet, label_feature_yaxis = FALSE)
  umap_am_alveolar_d60[[i]] <- plot
}
# Arrange plots using ggarrange
ggarrange(plotlist = umap_am_alveolar_d60, nrow = 5)
ggsave("abseq_featureplot_AM_alveolar_tissue_scCustomize.png", width = 60, height = 90, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## 6i) RNA Featureplots of H2-ab1 Itgax Pparg SiglecF and CD274 for sample type

```{r}
umap_am_alveolar_d60 <- list()
pallet = viridis(n = 10, option = "D")
genes_AM <- c("H2-Ab1", "Itgax", "Pparg", "Siglecf", "Cd274")

markers_am = unique(genes_AM)
for (i in markers_am) {
  plot <- FeaturePlot_scCustom(seurat_d60_1_alveolar,  features = i, label = TRUE, label.size = 5,  split.by = "sample_type", colors_use = pallet, label_feature_yaxis = FALSE)
  umap_am_alveolar_d60[[i]] <- plot
}
# Arrange plots using ggarrange
ggarrange(plotlist = umap_am_alveolar_d60, nrow = 5)
ggsave("featureplot_AM_alveolar_tissue_scCustomize.png", width = 60, height = 90, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/UMAP/Alveolar")
```

## **6j) Z-scores of cluster frequencies: heatmap**

```{r}
seurat_d60_1_alveolar |> 
  as_tibble() |>  # Convert obj.v5 to a tibble
  mutate(day=ifelse(condition=="Mock",condition,day)) |> 
  mutate(sample_type=as_factor(sample_type),
         condition=as_factor(condition),
         sampletag_Ms4a3=as_factor(sampletag_Ms4a3),
         harmony_cluster_8dims_rough=as_factor(harmony_cluster_8dims_rough)
         ) |> 
  dplyr::group_by(day,sample_type, condition,sampletag_Ms4a3,harmony_cluster_8dims_rough) |> 
  dplyr::count(day,sample_type, condition,sampletag_Ms4a3,harmony_cluster_8dims_rough, .drop = FALSE) |> 
  mutate(sample=paste(day,sample_type,condition,sampletag_Ms4a3)) |> 
  group_by(sample) |> 
  filter(!(day=="Mock"&(condition %in%c("PR8","MuHV4", "PVM", "MAV1")))) |> 
  mutate(freq_cluster=n/sum(n)) |> 
  mutate(condition=as.character(condition)) |> 
  na.omit() |>  # This is where the error occurs, likely because the object isn't a data frame or tibble
  group_by(harmony_cluster_8dims_rough) |> 
  mutate(cluster_mean_freq=mean(freq_cluster)) |> 
  mutate(cluster_mean_freq_zscore=(freq_cluster-cluster_mean_freq)/sd(freq_cluster)) |> 
  ggplot(aes(condition,harmony_cluster_8dims_rough, fill=cluster_mean_freq_zscore)) +
  geom_tile()+ 
  ggh4x::facet_nested_wrap(
    vars(sampletag_Ms4a3,sample_type), nrow = 1,drop = TRUE,scales = "free_x"
  )+theme_bw()+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))   + scale_fill_gradient2(  low = "blue",
  mid = "white",
  high = "red")+ggtitle("proportions of cells from a given sample distributed across clusters ",
                        "Ms4a3 classification as sorted")

ggsave(filename = "proportions of cells from a given sample distributed across clusters.png",path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/Alveolar",  height = 20, width = 30, units = "cm")
```

## 6k) PC plot showing Ms4a3 +/- distribution for all conditions for BAL

```{r}
seurat_d60_1_alveolar_bal = seurat_d60_1_alveolar %>% filter(str_detect(sample_type, "bal"))
seurat_d60_1_alveolar_bal = FindVariableFeatures(seurat_d60_1_alveolar_bal)
seurat_d60_1_alveolar_bal = NormalizeData(seurat_d60_1_alveolar_bal)
seurat_d60_1_alveolar_bal = ScaleData(seurat_d60_1_alveolar_bal)
DimPlot(seurat_d60_1_alveolar_bal, reduction = "pca", group.by = "condition")
ggsave("pcaplot_alveolar_bal_virus.png", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/PCA")
DimPlot(seurat_d60_1_alveolar_bal, reduction = "pca", group.by = "sampletag_Ms4a3")
ggsave("pcaplot_alveolar_bal_Ms4a3.png", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/PCA")
DimPlot(seurat_d60_1_alveolar_bal, reduction = "pca", group.by = "sampletag_name")
ggsave("pcaplot_alveolar_bal_Ms4a3_virus.png", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/PCA")
```

```{r}
value_to_check = "lung"
metadata_column = "day_sample_type_cond_ms4a3_pos_gabbr2"
value_present <- check_metadata_presence(seurat_d60_1_alveolar_bal, metadata_column, value_to_check)

metadata_column = "sample_type"
value_present <- check_metadata_presence(seurat_d60_1_alveolar_bal, metadata_column, value_to_check)

value_to_check = "bal"
metadata_column = "day_sample_type_cond_ms4a3_pos_gabbr2"
value_present <- check_metadata_presence(seurat_d60_1_alveolar_lung, metadata_column, value_to_check)

metadata_column = "sample_type"
value_present <- check_metadata_presence(seurat_d60_1_alveolar_lung, metadata_column, value_to_check)
```

## 6l) PC plot showing Ms4a3 +/- distribution for all conditions for LUNG

```{r}
seurat_d60_1_alveolar_lung = seurat_d60_1_alveolar %>% filter(str_detect(sample_type, "lung"))
seurat_d60_1_alveolar_lung = FindVariableFeatures(seurat_d60_1_alveolar_lung)
seurat_d60_1_alveolar_lung = NormalizeData(seurat_d60_1_alveolar_lung)
seurat_d60_1_alveolar_lung = ScaleData(seurat_d60_1_alveolar_lung)

DimPlot(seurat_d60_1_alveolar_lung, reduction = "pca", group.by = "condition")
ggsave("pcaplot_alveolar_lung_condition.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/PCA")
DimPlot(seurat_d60_1_alveolar_lung, reduction = "pca", group.by = "sampletag_Ms4a3")
ggsave("pcaplot_alveolar_lung_Ms4a3.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/PCA")
DimPlot(seurat_d60_1_alveolar_lung, reduction = "pca", group.by = "sampletag_name")
ggsave("pcaplot_alveolar_lung_condition_Ms4a3.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/PCA")
```

```{r}
DefaultAssay(obj.v5) = "adt"
FeaturePlot(obj.v5, features = c("Cd11c", "Siglecf-AbSeq"))
DefaultAssay(object = obj.v5) = "RNA"


```

# 7) DEA of the reclustered object

## 7a) find the markers of each cluster =\> no DEA yet

```{r, echo=FALSE}
markers_d60_alveolar <- FindAllMarkers(seurat_d60_1_alveolar,
                          assay = "RNA", 
                          logfc.threshold = 0.5,
                          test.use = "wilcox", 
                          min.pct = 0.2)
write_xlsx(markers_d60_alveolar, path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_d60_alveolar.xlsx")
```

```{r}
markers_d60_alveolar_filtered = markers_d60_alveolar[markers_d60_alveolar$avg_log2FC > 1,]
nonsignficant_p_adj_d60_alveolar <- which(markers_d60_alveolar_filtered$p_val_adj <= 0.05)
markers_d60_alveolar_filtered <- markers_d60_alveolar_filtered[nonsignficant_p_adj_d60_alveolar, ]
write_xlsx(markers_d60_alveolar_filtered, path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_d60_alveolar_filtered.xlsx")
```

```{r}
#select top 20 genes from each cluster

markers_d60_alveolar_filtered = data.frame(markers_d60_alveolar_filtered)

top_d60_alveolar <- select_top_genes(markers_d60_alveolar_filtered, n = 20)
write_xlsx(top_d60_alveolar,path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/top20_per_cluster_markers_d60_alveolar.xlsx")
```

```{r}
genes_d60_alveolar = top_d60_alveolar$gene

seurat_d60_1_alveolar |>
  join_features(genes_d60_alveolar,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(harmony_cluster_8dims_rough,.feature, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) +ggtitle("mean dsb-normalized protein counts, z-score of cluster averages per marker")
ggsave("hetmap_Zscore_clusterMarkers.png", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/Alveolar",  height = 50, width = 20, units = "cm")
```

## 7b) DEA testing Ms4a3 status for all infections (not including mock)

```{r}
DefaultAssay(seurat_d60_1_alveolar_noMock) = "RNA"
DefaultAssay(seurat_d60_1_alveolar_Mock) = "RNA"

seurat_d60_1_alveolar_noMock = seurat_d60_1_alveolar %>% filter(!str_detect(condition, "Mock"))
seurat_d60_1_alveolar_noMock = FindVariableFeatures(seurat_d60_1_alveolar_noMock, loess.span = 0.8)
seurat_d60_1_alveolar_noMock = ScaleData(seurat_d60_1_alveolar_noMock)

seurat_d60_1_alveolar_Mock = seurat_d60_1_alveolar %>% filter(str_detect(condition, "Mock"))
seurat_d60_1_alveolar_Mock = FindVariableFeatures(seurat_d60_1_alveolar_Mock)
seurat_d60_1_alveolar_Mock = ScaleData(seurat_d60_1_alveolar_Mock)
```

```{r}

Idents(seurat_d60_1_alveolar_noMock) = "sampletag_Ms4a3"
markers_alveolar_nomock_pos<- FindMarkers(seurat_d60_1_alveolar_noMock ,
                                 ident.1 =  "Ms4a3_pos",
                                 ident.2 =  "Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_nomock_neg <- FindMarkers(seurat_d60_1_alveolar_noMock ,
                                 ident.1 =  "Ms4a3_neg",
                                 ident.2 =  "Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_nomock_posfiltered = markers_alveolar_nomock_pos[markers_alveolar_nomock_pos$avg_log2FC > 1,]
nonsignficant_p_adj_ms4a3pos <- which(markers_alveolar_nomock_posfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_posfiltered <- markers_alveolar_nomock_posfiltered[nonsignficant_p_adj_ms4a3pos, ]

write_xlsx(markers_alveolar_nomock_pos, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_pos.xlsx")
write_xlsx(markers_alveolar_nomock_posfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_posfiltered.xlsx")

markers_alveolar_nomock_negfiltered = markers_alveolar_nomock_neg[markers_alveolar_nomock_neg$avg_log2FC > 1,]
nonsignficant_p_adj_Ms4a3neg <- which(markers_alveolar_nomock_negfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_negfiltered <- markers_alveolar_nomock_negfiltered[nonsignficant_p_adj_Ms4a3neg, ]

write_xlsx(markers_alveolar_nomock_neg, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_neg.xlsx")
write_xlsx(markers_alveolar_nomock_negfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_neg_filtered.xlsx")
```

#### volcano plot noMock Ms4a3 positive infected

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_pos$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_pos$diffexpressed[markers_alveolar_nomock_pos$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_pos$diffexpressed[markers_alveolar_nomock_pos$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_pos$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_pos$delabel[markers_alveolar_nomock_pos$diffexpressed != "NO"] <-
  markers_alveolar_nomock_pos$gene[markers_alveolar_nomock_pos$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3pos_noMock_sc <- ggplot(data = markers_alveolar_nomock_pos,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_pos$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_pos$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3pos_noMock_sc

# Save the plot
ggsave("volcano_alveolar_Ms4a3pos_nomock.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

#### volcano plot noMock Ms4a3 negative infected

```{r}
markers_alveolar_nomock_neg$diffexpressed <- "NO"
markers_alveolar_nomock_neg$diffexpressed[markers_alveolar_nomock_neg$avg_log2FC > 1] <- "UP"

markers_alveolar_nomock_neg$diffexpressed[markers_alveolar_nomock_neg$avg_log2FC < -1] <- "DOWN"

markers_alveolar_nomock_neg$delabel <- NA

markers_alveolar_nomock_neg$delabel[markers_alveolar_nomock_neg$diffexpressed != "NO"]<-markers_alveolar_nomock_neg$gene[markers_alveolar_nomock_neg$diffexpressed != "NO"]



volcano_alveolar_Ms4a3neg_noMock_sc <- ggplot(data=markers_alveolar_nomock_neg,
                           aes(x=avg_log2FC, y=-log10(p_val_adj), col = diffexpressed,                            label = delabel)) +
                           geom_point() + theme_minimal() +
                           scale_x_continuous(breaks = seq(floor(min (markers_alveolar_nomock_neg$avg_log2FC)), 
                           ceiling(max(markers_alveolar_nomock_neg$avg_log2FC)), by = 0.5)) +
                           geom_text_repel(max.overlaps = 100)
volcano_alveolar_Ms4a3neg_noMock_sc
ggsave("volcano_alveolar_Ms4a3neg_nomock.png",width = 45, height = 20, units = "cm", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

## 7c) DEA testing Ms4a3 status for Mock

```{r}
Idents(seurat_d60_1_alveolar_Mock) = "sampletag_Ms4a3"
markers_alveolar_mock_pos<- FindMarkers(seurat_d60_1_alveolar_Mock ,
                                 ident.1 =  "Ms4a3_pos",
                                 ident.2 =  "Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_mock_neg <- FindMarkers(seurat_d60_1_alveolar_Mock ,
                                 ident.1 =  "Ms4a3_neg",
                                 ident.2 =  "Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_Mock_posfiltered = markers_alveolar_mock_pos[markers_alveolar_mock_pos$avg_log2FC > 1,]
nonsignficant_p_adj_ms4a3pos <- which(markers_alveolar_Mock_posfiltered$p_val_adj <= 0.05)
markers_alveolar_Mock_posfiltered <- markers_alveolar_Mock_posfiltered[nonsignficant_p_adj_ms4a3pos, ]

write_xlsx(markers_alveolar_mock_pos, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_Mock_pos.xlsx")
write_xlsx(markers_alveolar_Mock_posfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_Mock_posfiltered.xlsx")

markers_alveolar_Mock_negfiltered = markers_alveolar_mock_neg[markers_alveolar_mock_neg$avg_log2FC > 1,]
nonsignficant_p_adj_Ms4a3neg <- which(markers_alveolar_Mock_negfiltered$p_val_adj <= 0.05)
markers_alveolar_Mock_negfiltered <- markers_alveolar_Mock_negfiltered[nonsignficant_p_adj_Ms4a3neg, ]

write_xlsx(markers_alveolar_mock_neg, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_Mock_neg.xlsx")
write_xlsx(markers_alveolar_Mock_negfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_Mock_neg_filtered.xlsx")
```

#### volcano plot Mock Ms4a3 positive mock

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_mock_pos$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_mock_pos$diffexpressed[markers_alveolar_mock_pos$avg_log2FC > 1] <- "UP"
markers_alveolar_mock_pos$diffexpressed[markers_alveolar_mock_pos$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_mock_pos$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_mock_pos$delabel[markers_alveolar_mock_pos$diffexpressed != "NO"] <-
  markers_alveolar_mock_pos$gene[markers_alveolar_mock_pos$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3pos_mock_sc <- ggplot(data = markers_alveolar_mock_pos,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_mock_pos$avg_log2FC)),
                                 ceiling(max(markers_alveolar_mock_pos$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3pos_mock_sc

# Save the plot
ggsave("volcano_alveolar_Ms4a3pos_Mock.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

#### volcano plot Mock Ms4a3 negative mock

```{r}
markers_alveolar_mock_neg$diffexpressed <- "NO"
markers_alveolar_mock_neg$diffexpressed[markers_alveolar_mock_neg$avg_log2FC > 1] <- "UP"

markers_alveolar_mock_neg$diffexpressed[markers_alveolar_mock_neg$avg_log2FC < -1] <- "DOWN"

markers_alveolar_mock_neg$delabel <- NA

markers_alveolar_mock_neg$delabel[markers_alveolar_mock_neg$diffexpressed != "NO"]<-markers_alveolar_mock_neg$gene[markers_alveolar_mock_neg$diffexpressed != "NO"]



volcano_alveolar_Ms4a3neg_mock_sc <- ggplot(data=markers_alveolar_mock_neg,
                           aes(x=avg_log2FC, y=-log10(p_val_adj), col = diffexpressed,                            label = delabel)) +
                           geom_point() + theme_minimal() +
                           scale_x_continuous(breaks = seq(floor(min (markers_alveolar_mock_neg$avg_log2FC)), 
                           ceiling(max(markers_alveolar_mock_neg$avg_log2FC)), by = 0.5)) +
                           geom_text_repel(max.overlaps = 100)
volcano_alveolar_Ms4a3neg_mock_sc
ggsave("volcano_alveolar_Ms4a3neg_Mock.png",width = 45, height = 20, units = "cm", path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

## 7D) get ms4a3 specific markers

```{r}
Ms4a3_pos_markers = inner_join(markers_alveolar_Mock_posfiltered, markers_alveolar_nomock_posfiltered, by = "gene")
write_xlsx(Ms4a3_pos_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/Ms4a3_pos_markers.xlsx")

Ms4a3_neg_markers = inner_join(markers_alveolar_Mock_negfiltered, markers_alveolar_nomock_negfiltered, by = "gene")
write_xlsx(Ms4a3_neg_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/Ms4a3_neg_markers.xlsx")


```

# 8) DEA testing of alveolar nomock each infection separately

#### initializing and rescaling the new objects

```{r, echo= FALSE}


Idents(seurat_d60_1_alveolar_noMock) = "condition"

seurat_d60_1_alveolar_noMock_MuHV4 = subset(seurat_d60_1_alveolar_noMock, idents = "MuHV4")
DefaultAssay(seurat_d60_1_alveolar_noMock_MuHV4) = "RNA"
seurat_d60_1_alveolar_noMock_MuHV4 = FindVariableFeatures(seurat_d60_1_alveolar_noMock_MuHV4)
seurat_d60_1_alveolar_noMock_MuHV4 = ScaleData(seurat_d60_1_alveolar_noMock_MuHV4)


seurat_d60_1_alveolar_noMock_PR8 = subset(seurat_d60_1_alveolar_noMock, idents = "PR8")
DefaultAssay(seurat_d60_1_alveolar_noMock_PR8) = "RNA"
seurat_d60_1_alveolar_noMock_PR8 = FindVariableFeatures(seurat_d60_1_alveolar_noMock_PR8)
seurat_d60_1_alveolar_noMock_PR8 = ScaleData(seurat_d60_1_alveolar_noMock_PR8)


seurat_d60_1_alveolar_noMock_MAV1 = subset(seurat_d60_1_alveolar_noMock, idents = "MAV1")
DefaultAssay(seurat_d60_1_alveolar_noMock_MAV1) = "RNA"
seurat_d60_1_alveolar_noMock_MAV1 = FindVariableFeatures(seurat_d60_1_alveolar_noMock_MAV1)
seurat_d60_1_alveolar_noMock_MAV1 = ScaleData(seurat_d60_1_alveolar_noMock_MAV1)


seurat_d60_1_alveolar_noMock_PVM = subset(seurat_d60_1_alveolar_noMock, idents = "PVM")
DefaultAssay(seurat_d60_1_alveolar_noMock_PVM) = "RNA"
seurat_d60_1_alveolar_noMock_PVM = FindVariableFeatures(seurat_d60_1_alveolar_noMock_PVM)
seurat_d60_1_alveolar_noMock_PVM = ScaleData(seurat_d60_1_alveolar_noMock_PVM)        

```

## 8a) DEA for alveolar noMock MuHV4

```{r}
Idents(seurat_d60_1_alveolar_noMock_MuHV4) = "sampletag_Ms4a3"
markers_alveolar_nomock_pos_MuHV4<- FindMarkers(seurat_d60_1_alveolar_noMock_MuHV4 ,
                                 ident.1 =  "Ms4a3_pos",
                                 ident.2 =  "Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_nomock_neg_MuHV4 <- FindMarkers(seurat_d60_1_alveolar_noMock_MuHV4 ,
                                 ident.1 =  "Ms4a3_neg",
                                 ident.2 =  "Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_nomock_MuHv4posfiltered = markers_alveolar_nomock_pos_MuHV4[markers_alveolar_nomock_pos_MuHV4$avg_log2FC > 1,]
nonsignficant_p_adj_ms4a3pos <- which(markers_alveolar_nomock_MuHv4posfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_MuHv4posfiltered <- markers_alveolar_nomock_MuHv4posfiltered[nonsignficant_p_adj_ms4a3pos, ]

write_xlsx(markers_alveolar_nomock_pos_MuHV4, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_pos_MuHV4.xlsx")
write_xlsx(markers_alveolar_nomock_MuHv4posfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_MuHv4posfiltered.xlsx")

markers_alveolar_nomock_MuHV4negfiltered = markers_alveolar_nomock_neg_MuHV4[markers_alveolar_nomock_neg_MuHV4$avg_log2FC > 1,]
nonsignficant_p_adj_Ms4a3neg <- which(markers_alveolar_nomock_MuHV4negfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_MuHV4negfiltered <- markers_alveolar_nomock_negfiltered[nonsignficant_p_adj_Ms4a3neg, ]

write_xlsx(markers_alveolar_nomock_neg, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_neg_MuHV4.xlsx")
write_xlsx(markers_alveolar_nomock_negfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_neg_MuHV4_filtered.xlsx")
```

### volcanoplot Ms4A3 positive noMock alveola MuHV4

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_pos_MuHV4$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_pos_MuHV4$diffexpressed[markers_alveolar_nomock_pos_MuHV4$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_pos_MuHV4$diffexpressed[markers_alveolar_nomock_pos_MuHV4$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_pos_MuHV4$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_pos_MuHV4$delabel[markers_alveolar_nomock_pos_MuHV4$diffexpressed != "NO"] <-
  markers_alveolar_nomock_pos_MuHV4$gene[markers_alveolar_nomock_pos_MuHV4$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3pos_noMock_MuHV4 <- ggplot(data = markers_alveolar_nomock_pos_MuHV4,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_pos_MuHV4$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_pos_MuHV4$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3pos_noMock_MuHV4

# Save the plot
ggsave("volcano_alveolar_Ms4a3pos_nomock_MuHV4.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

### volcanoplot Ms4A3 negative noMock alveola MuHV4

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_neg_MuHV4$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_neg_MuHV4$diffexpressed[markers_alveolar_nomock_neg_MuHV4$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_neg_MuHV4$diffexpressed[markers_alveolar_nomock_neg_MuHV4$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_neg_MuHV4$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_neg_MuHV4$delabel[markers_alveolar_nomock_neg_MuHV4$diffexpressed != "NO"] <-
  markers_alveolar_nomock_neg_MuHV4$gene[markers_alveolar_nomock_neg_MuHV4$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3neg_noMock_MuHV4 <- ggplot(data = markers_alveolar_nomock_neg_MuHV4,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_neg_MuHV4$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_neg_MuHV4$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3neg_noMock_MuHV4

# Save the plot
ggsave("volcano_alveolar_Ms4a3neg_nomock_MuHV4.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

## 8b) DEA for alveolar noMock PR8

```{r}
Idents(seurat_d60_1_alveolar_noMock_PR8) = "sampletag_Ms4a3"
markers_alveolar_nomock_pos_PR8<- FindMarkers(seurat_d60_1_alveolar_noMock_PR8 ,
                                 ident.1 =  "Ms4a3_pos",
                                 ident.2 =  "Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_nomock_neg_PR8 <- FindMarkers(seurat_d60_1_alveolar_noMock_PR8 ,
                                 ident.1 =  "Ms4a3_neg",
                                 ident.2 =  "Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_nomock_PR8posfiltered = markers_alveolar_nomock_pos_PR8[markers_alveolar_nomock_pos_PR8$avg_log2FC > 1,]
nonsignficant_p_adj_ms4a3pos <- which(markers_alveolar_nomock_PR8posfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_PR8posfiltered <- markers_alveolar_nomock_PR8posfiltered[nonsignficant_p_adj_ms4a3pos, ]

write_xlsx(markers_alveolar_nomock_pos_PR8, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_pos_PR8.xlsx")
write_xlsx(markers_alveolar_nomock_PR8posfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_PR8posfiltered.xlsx")

markers_alveolar_nomock_PR8negfiltered = markers_alveolar_nomock_neg_PR8[markers_alveolar_nomock_neg_PR8$avg_log2FC > 1,]
nonsignficant_p_adj_Ms4a3neg <- which(markers_alveolar_nomock_PR8negfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_PR8negfiltered <- markers_alveolar_nomock_negfiltered[nonsignficant_p_adj_Ms4a3neg, ]

write_xlsx(markers_alveolar_nomock_neg, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_PR8_neg.xlsx")
write_xlsx(markers_alveolar_nomock_negfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_PR8_neg_filtered.xlsx")
```

### volcanoplot Ms4A3 positive noMock alveola PR8

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_pos_PR8$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_pos_PR8$diffexpressed[markers_alveolar_nomock_pos_MuHV4$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_pos_PR8$diffexpressed[markers_alveolar_nomock_pos_PR8$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_pos_PR8$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_pos_PR8$delabel[markers_alveolar_nomock_pos_PR8$diffexpressed != "NO"] <-
  markers_alveolar_nomock_pos_PR8$gene[markers_alveolar_nomock_pos_PR8$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3pos_noMock_PR8 <- ggplot(data = markers_alveolar_nomock_pos_PR8,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_pos_PR8$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_pos_PR8$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3pos_noMock_PR8

# Save the plot
ggsave("volcano_alveolar_Ms4a3pos_nomock_PR8.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

### volcanoplot Ms4A3 negative noMock alveola PR8

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_neg_PR8$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_neg_PR8$diffexpressed[markers_alveolar_nomock_neg_PR8$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_neg_PR8$diffexpressed[markers_alveolar_nomock_neg_PR8$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_neg_PR8$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_neg_PR8$delabel[markers_alveolar_nomock_neg_PR8$diffexpressed != "NO"] <-
  markers_alveolar_nomock_neg_PR8$gene[markers_alveolar_nomock_neg_PR8$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3neg_noMock_PR8 <- ggplot(data = markers_alveolar_nomock_neg_PR8,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_neg_PR8$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_neg_PR8$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3neg_noMock_PR8

# Save the plot
ggsave("volcano_alveolar_Ms4a3neg_nomock_PR8.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

## 8C) DEA for alveolar noMock PVM

```{r}
Idents(seurat_d60_1_alveolar_noMock_PVM) = "sampletag_Ms4a3"
markers_alveolar_nomock_pos_PVM<- FindMarkers(seurat_d60_1_alveolar_noMock_PVM ,
                                 ident.1 =  "Ms4a3_pos",
                                 ident.2 =  "Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_nomock_neg_PVM <- FindMarkers(seurat_d60_1_alveolar_noMock_PVM ,
                                 ident.1 =  "Ms4a3_neg",
                                 ident.2 =  "Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_nomock_PVMposfiltered = markers_alveolar_nomock_pos_PVM[markers_alveolar_nomock_pos_PVM$avg_log2FC > 1,]
nonsignficant_p_adj_ms4a3pos <- which(markers_alveolar_nomock_PVMposfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_PVMposfiltered <- markers_alveolar_nomock_PVMposfiltered[nonsignficant_p_adj_ms4a3pos, ]

write_xlsx(markers_alveolar_nomock_pos_PVM, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_pos_PVM.xlsx")
write_xlsx(markers_alveolar_nomock_PVMposfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_PVMposfiltered.xlsx")

markers_alveolar_nomock_PVMnegfiltered = markers_alveolar_nomock_neg_PVM[markers_alveolar_nomock_neg_PVM$avg_log2FC > 1,]
nonsignficant_p_adj_Ms4a3neg <- which(markers_alveolar_nomock_PVMnegfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_PVMnegfiltered <- markers_alveolar_nomock_negfiltered[nonsignficant_p_adj_Ms4a3neg, ]

write_xlsx(markers_alveolar_nomock_neg, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_PVM_neg.xlsx")
write_xlsx(markers_alveolar_nomock_negfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_PVM_neg_filtered.xlsx")
```

### volcanoplot Ms4A3 positive noMock alveola PVM

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_pos_PVM$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_pos_PVM$diffexpressed[markers_alveolar_nomock_pos_PVM$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_pos_PVM$diffexpressed[markers_alveolar_nomock_pos_PVM$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_pos_PVM$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_pos_PVM$delabel[markers_alveolar_nomock_pos_PVM$diffexpressed != "NO"] <-
  markers_alveolar_nomock_pos_PVM$gene[markers_alveolar_nomock_pos_PVM$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3pos_noMock_PVM <- ggplot(data = markers_alveolar_nomock_pos_PVM,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_pos_PVM$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_pos_PVM$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3pos_noMock_PVM

# Save the plot
ggsave("volcano_alveolar_Ms4a3pos_nomock_PVM.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

### volcanoplot Ms4A3 negative noMock alveola PVM

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_neg_PVM$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_neg_PVM$diffexpressed[markers_alveolar_nomock_neg_PVM$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_neg_PVM$diffexpressed[markers_alveolar_nomock_neg_PVM$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_neg_PVM$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_neg_PVM$delabel[markers_alveolar_nomock_neg_PVM$diffexpressed != "NO"] <-
  markers_alveolar_nomock_neg_PVM$gene[markers_alveolar_nomock_neg_PVM$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3neg_noMock_PVM <- ggplot(data = markers_alveolar_nomock_neg_PVM,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_neg_PVM$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_neg_PVM$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3neg_noMock_PVM

# Save the plot
ggsave("volcano_alveolar_Ms4a3neg_nomock_PVM.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

## 8d) DEA for alveolar noMock MAV1

```{r}
Idents(seurat_d60_1_alveolar_noMock_MAV1) = "sampletag_Ms4a3"
markers_alveolar_nomock_pos_MAV1<- FindMarkers(seurat_d60_1_alveolar_noMock_MAV1 ,
                                 ident.1 =  "Ms4a3_pos",
                                 ident.2 =  "Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_nomock_neg_MAV1 <- FindMarkers(seurat_d60_1_alveolar_noMock_PR8 ,
                                 ident.1 =  "Ms4a3_neg",
                                 ident.2 =  "Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_nomock_MAV1posfiltered = markers_alveolar_nomock_pos_MAV1[markers_alveolar_nomock_pos_MAV1$avg_log2FC > 1,]
nonsignficant_p_adj_ms4a3pos <- which(markers_alveolar_nomock_MAV1posfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_MAV1posfiltered <- markers_alveolar_nomock_MAV1posfiltered[nonsignficant_p_adj_ms4a3pos, ]

write_xlsx(markers_alveolar_nomock_pos_MAV1, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_pos_MAV1.xlsx")
write_xlsx(markers_alveolar_nomock_MAV1posfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_MAV1posfiltered.xlsx")

markers_alveolar_nomock_MAV1negfiltered = markers_alveolar_nomock_neg_MAV1[markers_alveolar_nomock_neg_MAV1$avg_log2FC > 1,]
nonsignficant_p_adj_Ms4a3neg <- which(markers_alveolar_nomock_MAV1negfiltered$p_val_adj <= 0.05)
markers_alveolar_nomock_MAV1negfiltered <- markers_alveolar_nomock_negfiltered[nonsignficant_p_adj_Ms4a3neg, ]

write_xlsx(markers_alveolar_nomock_neg, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_MAV1_neg.xlsx")
write_xlsx(markers_alveolar_nomock_negfiltered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/markers_alveolar_nomock_MAV1_neg_filtered.xlsx")
```

### volcanoplot Ms4A3 positive noMock alveola MAV1

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_pos_MAV1$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_pos_MAV1$diffexpressed[markers_alveolar_nomock_pos_MAV1$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_pos_MAV1$diffexpressed[markers_alveolar_nomock_pos_MAV1$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_pos_MAV1$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_pos_MAV1$delabel[markers_alveolar_nomock_pos_MAV1$diffexpressed != "NO"] <-
  markers_alveolar_nomock_pos_MAV1$gene[markers_alveolar_nomock_pos_MAV1$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3pos_noMock_MAV1 <- ggplot(data = markers_alveolar_nomock_pos_MAV1,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_pos_MAV1$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_pos_MAV1$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3pos_noMock_MAV1

# Save the plot
ggsave("volcano_alveolar_Ms4a3pos_nomock_MAV1.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

### volcanoplot Ms4A3 negative noMock alveola MAV1

```{r}
# Assign "NO" to diffexpressed column
markers_alveolar_nomock_neg_MAV1$diffexpressed <- "NO"

# Categorize genes as "UP" or "DOWN" based on avg_log2FC
markers_alveolar_nomock_neg_MAV1$diffexpressed[markers_alveolar_nomock_neg_MAV1$avg_log2FC > 1] <- "UP"
markers_alveolar_nomock_neg_MAV1$diffexpressed[markers_alveolar_nomock_neg_MAV1$avg_log2FC < -1] <- "DOWN"

# Add a column for labels
markers_alveolar_nomock_neg_MAV1$delabel <- NA

# Assign gene names as labels for differentially expressed genes
markers_alveolar_nomock_neg_MAV1$delabel[markers_alveolar_nomock_neg_MAV1$diffexpressed != "NO"] <-
  markers_alveolar_nomock_neg_MAV1$gene[markers_alveolar_nomock_neg_MAV1$diffexpressed != "NO"]  # Ensure consistent variable names




volcano_alveolar_Ms4a3neg_noMock_MAV1 <- ggplot(data = markers_alveolar_nomock_neg_MAV1,
       aes(x = avg_log2FC, y = -log10(p_val_adj), col = diffexpressed, label = delabel)) +
  geom_point() +
  theme_minimal() +
  scale_x_continuous(breaks = seq(floor(min(markers_alveolar_nomock_neg_MAV1$avg_log2FC)),
                                 ceiling(max(markers_alveolar_nomock_neg_MAV1$avg_log2FC)), by = 0.5)) +
  geom_text_repel(max.overlaps = 100)

volcano_alveolar_Ms4a3neg_noMock_MAV1

# Save the plot
ggsave("volcano_alveolar_Ms4a3neg_nomock_MAV1.png",
       width = 45, height = 20, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/")
```

## 8e) markers for each disease and Ms4a3 status separate

Need to find the markers for each combination of infection and Ms4a3 status

reasoning: inner join meaning only overlap between two filtered dataframes of marker genes. with df1 (x in the excel) representing the status Ms4a3 and virus and df2 (y in the excel) representing the differentially expressed genes for the infections respective of status Ms4a3

```{r}
MuHV4_Ms4a3pos_markers =  markers_alveolar_nomock_MuHv4posfiltered[!(markers_alveolar_nomock_MuHv4posfiltered$gene %in% markers_alveolar_nomock_posfiltered$gene), ]

write_xlsx(MuHV4_Ms4a3pos_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/MuHV4_Ms4a3pos_markers.xlsx")


MuHV4_Ms4a3neg_markers = markers_alveolar_nomock_MuHV4negfiltered[!(markers_alveolar_nomock_MuHV4negfiltered$gene %in% markers_alveolar_nomock_negfiltered$gene), ]

write_xlsx(MuHV4_Ms4a3pos_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/MuHV4_Ms4a3neg_markers.xlsx")


PR8_Ms4a3neg_markers = markers_alveolar_nomock_PR8negfiltered[!(markers_alveolar_nomock_PR8negfiltered$gene %in% markers_alveolar_nomock_negfiltered$gene), ]
write_xlsx(PR8_Ms4a3neg_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/PR8_Ms4a3neg_markers.xlsx")


PR8_Ms4a3pos_markers = markers_alveolar_nomock_PR8posfiltered[!(markers_alveolar_nomock_PR8posfiltered$gene %in% markers_alveolar_nomock_posfiltered$gene), ]
write_xlsx(PR8_Ms4a3pos_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/PR8_Ms4a3pos_markers.xlsx")


PVM_Ms4a3pos_markers = markers_alveolar_nomock_PVMposfiltered[!(markers_alveolar_nomock_PVMposfiltered$gene %in% markers_alveolar_nomock_posfiltered$gene), ]
write_xlsx(PVM_Ms4a3pos_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/PVM_Ms4a3pos_markers.xlsx")


PVM_Ms4a3neg_markers = markers_alveolar_nomock_PVMnegfiltered[!(markers_alveolar_nomock_PVMnegfiltered$gene %in% markers_alveolar_nomock_negfiltered$gene), ]
write_xlsx(PVM_Ms4a3neg_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/PVM_Ms4a3neg_markers.xlsx")


MAV1_Ms4a3pos_markers =  markers_alveolar_nomock_MAV1posfiltered[!(markers_alveolar_nomock_MAV1posfiltered$gene %in% markers_alveolar_nomock_posfiltered$gene), ]
write_xlsx(MAV1_Ms4a3pos_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/MAV1_Ms4a3pos_markers.xlsx")


MAV1_Ms4a3neg_markers = markers_alveolar_nomock_MAV1negfiltered[!(markers_alveolar_nomock_MAV1negfiltered$gene %in% markers_alveolar_nomock_negfiltered$gene), ]
write_xlsx(MAV1_Ms4a3neg_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/MAV1_Ms4a3neg_markers.xlsx")



Mock_Ms4a3pos_markers =  markers_alveolar_Mock_posfiltered[!(markers_alveolar_Mock_posfiltered$gene %in% markers_alveolar_nomock_posfiltered$gene), ]
write_xlsx(MAV1_Ms4a3pos_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/Mock_Ms4a3pos_markers.xlsx")



Mock_Ms4a3neg_markers =  markers_alveolar_Mock_negfiltered[!(markers_alveolar_Mock_negfiltered$gene %in% markers_alveolar_nomock_negfiltered$gene), ]
write_xlsx(MAV1_Ms4a3neg_markers, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/specificVirus/Mock_Ms4a3neg_markers.xlsx")
```

# 9) DEGs comparing each infection to all the groups, including Mock.

```{r}
Idents(seurat_d60_1_alveolar) = "condition"
markers_alveolar_MuHV4<- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "MuHV4",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_PR8 <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "PR8",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_PVM <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "PVM",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_MAV1 <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "MAV1",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_Mock <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "Mock",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_Mock_filtered = markers_alveolar_Mock[markers_alveolar_Mock$avg_log2FC > 1,]
nonsignficant_p_adj_Mock <- which(markers_alveolar_Mock_filtered$p_val_adj <= 0.05)
markers_alveolar_Mock_filtered <- markers_alveolar_Mock[nonsignficant_p_adj_Mock, ]

write_xlsx(markers_alveolar_Mock, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_Mock.xlsx")
write_xlsx(markers_alveolar_Mock_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_Mock_filtered.xlsx")

markers_alveolar_MuHV4_filtered = markers_alveolar_MuHV4[markers_alveolar_MuHV4$avg_log2FC > 1,]
nonsignficant_p_adj_MuHV4 <- which(markers_alveolar_MuHV4_filtered$p_val_adj <= 0.05)
markers_alveolar_MuHV4_filtered <- markers_alveolar_MuHV4[nonsignficant_p_adj_MuHV4, ]

write_xlsx(markers_alveolar_MuHV4, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_MuHV4.xlsx")
write_xlsx(markers_alveolar_MuHV4_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_MuHV4_filtered.xlsx")

markers_alveolar_PR8_filtered = markers_alveolar_PR8[markers_alveolar_PR8$avg_log2FC > 1,]
nonsignficant_p_adj_PR8 <- which(markers_alveolar_PR8_filtered$p_val_adj <= 0.05)
markers_alveolar_PR8_filtered <- markers_alveolar_PR8[nonsignficant_p_adj_PR8, ]

write_xlsx(markers_alveolar_PR8, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_PR8.xlsx")
write_xlsx(markers_alveolar_PR8_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_PR8_filtered.xlsx")

markers_alveolar_MAV1_filtered = markers_alveolar_MAV1[markers_alveolar_MAV1$avg_log2FC > 1,]
nonsignficant_p_adj_MAV1 <- which(markers_alveolar_MAV1_filtered$p_val_adj <= 0.05)
markers_alveolar_MAV1_filtered <- markers_alveolar_MAV1[nonsignficant_p_adj_MAV1, ]

write_xlsx(markers_alveolar_MAV1, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_MAV1.xlsx")
write_xlsx(markers_alveolar_MAV1_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_MAV1_filtered.xlsx")

markers_alveolar_PVM_filtered = markers_alveolar_PVM[markers_alveolar_PVM$avg_log2FC > 1,]
nonsignficant_p_adj_PVM <- which(markers_alveolar_PVM_filtered$p_val_adj <= 0.05)
markers_alveolar_PVM_filtered <- markers_alveolar_PVM[nonsignficant_p_adj_PVM, ]

write_xlsx(markers_alveolar_PVM, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_PVM.xlsx")
write_xlsx(markers_alveolar_PVM_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/g/markers_alveolar_PVM_filtered.xlsx")

```

# 10) DEGs comparing each infection to all the groups, including Mock.

```{r}
Idents(seurat_d60_1_alveolar) = "sampletag_name"
markers_alveolar_MuHV4n<- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "MuHV4_Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_MuHV4p<- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "MuHV4_Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_PR8n <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "PR8_Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_PR8p <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "PR8_Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_PVMn <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "PVM_Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_PVMp <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "PVM_Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_MAV1n <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "MAV1_Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_MAV1p <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "MAV1_Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_Mockn <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "Mock_Ms4a3_neg",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
markers_alveolar_Mockp <- FindMarkers(seurat_d60_1_alveolar,
                                 ident.1 =  "Mock_Ms4a3_pos",
                                 test.use = "wilcox", 
                                 assay = "RNA",
                                 min.pct = 0.2) |> as_tibble(rownames="gene")
```

```{r}
markers_alveolar_Mockn_filtered = markers_alveolar_Mockn[abs(markers_alveolar_Mockn$avg_log2FC) > 1,]
nonsignficant_p_adj_Mockn <- which(markers_alveolar_Mockn_filtered$p_val_adj <= 0.05)
markers_alveolar_Mockn_filtered <- markers_alveolar_Mockn_filtered[nonsignficant_p_adj_Mockn, ]

write_xlsx(markers_alveolar_Mockn, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_Mockn.xlsx")
write_xlsx(markers_alveolar_Mockn_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_Mockn_filtered.xlsx")

markers_alveolar_Mockp_filtered = markers_alveolar_Mockp[abs(markers_alveolar_Mockp$avg_log2FC) > 1,]
nonsignficant_p_adj_Mockp <- which(markers_alveolar_Mockp_filtered$p_val_adj <= 0.05)
markers_alveolar_Mockp_filtered <- markers_alveolar_Mockp_filtered[nonsignficant_p_adj_Mockp, ]

write_xlsx(markers_alveolar_Mockp, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_Mockp.xlsx")
write_xlsx(markers_alveolar_Mockp_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_Mockp_filtered.xlsx")

markers_alveolar_MuHV4n_filtered = markers_alveolar_MuHV4n[abs(markers_alveolar_MuHV4n$avg_log2FC) > 1,]
nonsignficant_p_adj_MuHV4n <- which(markers_alveolar_MuHV4n_filtered$p_val_adj <= 0.05)
markers_alveolar_MuHV4n_filtered <- markers_alveolar_MuHV4n_filtered[nonsignficant_p_adj_MuHV4n, ]

write_xlsx(markers_alveolar_MuHV4n, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MuHV4n.xlsx")
write_xlsx(markers_alveolar_MuHV4n_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MuHV4n_filtered.xlsx")



markers_alveolar_MuHV4p_filtered = markers_alveolar_MuHV4p[abs(markers_alveolar_MuHV4p$avg_log2FC) > 1,]
nonsignficant_p_adj_MuHV4p <- which(markers_alveolar_MuHV4p_filtered$p_val_adj <= 0.05)
markers_alveolar_MuHV4p_filtered <- markers_alveolar_MuHV4p_filtered[nonsignficant_p_adj_MuHV4p, ]
write_xlsx(markers_alveolar_MuHV4p, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MuHV4p.xlsx")
write_xlsx(markers_alveolar_MuHV4p_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MuHV4p_filtered.xlsx")



markers_alveolar_PR8n_filtered = markers_alveolar_PR8n[abs(markers_alveolar_PR8n$avg_log2FC) > 1,]
nonsignficant_p_adj_PR8n <- which(markers_alveolar_PR8n_filtered$p_val_adj <= 0.05)
markers_alveolar_PR8n_filtered <- markers_alveolar_PR8n_filtered[nonsignficant_p_adj_PR8n, ]

write_xlsx(markers_alveolar_PR8n, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PR8n.xlsx")
write_xlsx(markers_alveolar_PR8n_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PR8n_filtered.xlsx")


# Filter markers_alveolar_PR8p for genes with avg_log2FC > 1
markers_alveolar_PR8p_filtered <- markers_alveolar_PR8p[abs(markers_alveolar_PR8p$avg_log2FC) > 1,]

# Filter further based on p-value adjusted cutoff
nonsignficant_p_adj_PR8p <- which(markers_alveolar_PR8p_filtered$p_val_adj <= 0.05)
markers_alveolar_PR8p_filtered <- markers_alveolar_PR8p_filtered[nonsignficant_p_adj_PR8p, ]

# Write original and filtered data to excel
write_xlsx(markers_alveolar_PR8p, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PR8p.xlsx")
write_xlsx(markers_alveolar_PR8p_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PR8p_filtered.xlsx")



markers_alveolar_MAV1n_filtered = markers_alveolar_MAV1n[abs(markers_alveolar_MAV1n$avg_log2FC) > 1,]
nonsignficant_p_adj_MAV1n <- which(markers_alveolar_MAV1n_filtered$p_val_adj <= 0.05)
markers_alveolar_MAV1n_filtered <- markers_alveolar_MAV1n_filtered[nonsignficant_p_adj_MAV1n, ]

write_xlsx(markers_alveolar_MAV1n, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MAV1n.xlsx")
write_xlsx(markers_alveolar_MAV1n_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MAV1n_filtered.xlsx")

markers_alveolar_MAV1p_filtered = markers_alveolar_MAV1p[abs(markers_alveolar_MAV1p$avg_log2FC) > 1,]
nonsignficant_p_adj_MAV1p <- which(markers_alveolar_MAV1p_filtered$p_val_adj <= 0.05)
markers_alveolar_MAV1p_filtered <- markers_alveolar_MAV1p_filtered[nonsignficant_p_adj_MAV1p, ]

write_xlsx(markers_alveolar_MAV1p, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MAV1p.xlsx")
write_xlsx(markers_alveolar_MAV1p_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MAV1p_filtered.xlsx")




markers_alveolar_PVMn_filtered = markers_alveolar_PVMn[abs(markers_alveolar_PVMn$avg_log2FC) > 1,]
nonsignficant_p_adj_PVMn <- which(markers_alveolar_PVMn_filtered$p_val_adj <= 0.05)
markers_alveolar_PVMn_filtered <- markers_alveolar_PVMn_filtered[nonsignficant_p_adj_PVMn, ]

write_xlsx(markers_alveolar_PVMn, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PVMn.xlsx")
write_xlsx(markers_alveolar_PVMn_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PVMn_filtered.xlsx")

markers_alveolar_PVMp_filtered = markers_alveolar_PVMp[abs(markers_alveolar_PVMp$avg_log2FC) > 1,]
nonsignficant_p_adj_PVMp <- which(markers_alveolar_PVMp_filtered$p_val_adj <= 0.05)
markers_alveolar_PVMp_filtered <- markers_alveolar_PVMp_filtered[nonsignficant_p_adj_PVMp, ]

write_xlsx(markers_alveolar_PVMp, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PVMp.xlsx")
write_xlsx(markers_alveolar_PVMp_filtered, "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PVMp_filtered.xlsx")
```

# 11) GSEA of MuHV4_Ms4a3+

```{r}
organism = "org.Mm.eg.db"
library(organism, character.only = TRUE)
```

```{r}
MuHV4_Ms4a3pos = read_xlsx("../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MuHV4p_filtered.xlsx")
MuHV4_Ms4a3pos_input = MuHV4_Ms4a3pos$avg_log2FC
names(MuHV4_Ms4a3pos_input) = MuHV4_Ms4a3pos$gene
#sort in descending order => required for clusterProfiler
gene_list_MuHV4_Ms4a3pos = sort(MuHV4_Ms4a3pos_input, decreasing = TRUE)
MuHV4_genes = MuHV4_Ms4a3pos$gene
MuHV4_genes =  gsub("[\\[\\]]", "", MuHV4_genes)
filename = "muhv4_genes.txt"
write.table(MuHV4_genes, file = filename, sep =" ")
```

```{r}
gse_MuHV4_Ms4a3_pos <- gseGO(geneList=gene_list_MuHV4_Ms4a3pos, 
             ont ="ALL", 
             keyType = "SYMBOL", 
             minGSSize = 3, 
             maxGSSize = 800, 
             pvalueCutoff = 0.05, 
             verbose = TRUE, 
             OrgDb = organism,
             pAdjustMethod = "none")
```

```{r}
#| fig-width: 18
#| fig-height: 10
require(DOSE)
dotplot(gse_MuHV4_Ms4a3_pos, showCategory=10, split=".sign") + facet_grid(.~.sign)

ggsave("dotPlot_MuHV4_Ms4a3+_GO.png",
       width = 30, height = 35, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/GSEA/MuHV4_Ms4a3+")
```

```{r}
ridgeplot(gse_MuHV4_Ms4a3_pos) + labs(x = "enrichment distribution")
ggsave("ridge_MuHV4_Ms4a3+_GO.png",
       width = 30, height = 50, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/GSEA/MuHV4_Ms4a3+")
```

## 10a) KEGG GSEA

```{r}
ids<-bitr(names(MuHV4_Ms4a3pos_input), fromType = "SYMBOL", toType = "ENTREZID", OrgDb=organism)

dedup_ids = ids[!duplicated(ids[c("SYMBOL")]),]

# Create a new dataframe df2 which has only the genes which were successfully mapped using the bitr function above
df2 = MuHV4_Ms4a3pos[MuHV4_Ms4a3pos$gene %in% dedup_ids$SYMBOL,]

# Create a new column in df2 with the corresponding ENTREZ IDs
df2$Y = dedup_ids$ENTREZID

# Create a vector of the gene unuiverse
kegg_gene_list <- df2$avg_log2FC



# Name vector with ENTREZ ids
names(kegg_gene_list) <- df2$Y

# omit any NA values 
kegg_gene_list<-na.omit(kegg_gene_list)

# sort the list in decreasing order (required for clusterProfiler)
kegg_gene_list = sort(kegg_gene_list, decreasing = TRUE)
```

```{r}
kegg_organism = "mmu"
gse_MuHV4_Ms4a3_pos_kegg <- gseKEGG(geneList     = kegg_gene_list,
               organism     = kegg_organism,
               nPerm        = 10000,
               minGSSize    = 3,
               maxGSSize    = 800,
               pvalueCutoff = 0.05,
               pAdjustMethod = "none",
               keyType       = "ncbi-geneid")
```

Enrichment map organizes enriched terms into a network with edges connecting overlapping gene sets. In this way, mutually overlapping gene sets are tend to cluster together, making it easy to identify functional modules.

```{r}
dotplot(object = gse_MuHV4_Ms4a3_pos_kegg, showCategory = 10, title = "Enriched Pathways" , split=".sign") + facet_grid(.~.sign)
ggsave("dotPlot_MuHV4_Ms4a3+_KEGG.png",
       width = 30, height = 35, units = "cm",
       path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/GSEA/MuHV4_Ms4a3+")
make
```

```{r}
MuHV4_pos <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MuHV4p_filtered.xlsx"

kegg_gene_list <- gsea_GO_KEGG(filename = MuHV4_pos, sample_name = "MuHV4_p", organism = organism)
```

# 11) GSEA of MuHV4 Ms4a3 -

```{r}
gsea_GO_KEGG <- function(filename, organism, sample_name = "MuHV4_Ms4a3+") {
  # Read data
  data <- read_xlsx(filename)
  
  # Select and rename columns
  data_input <- data$avg_log2FC
  names(data_input) <- data$gene
  
  # Sort data (descending)
  gene_list <- sort(data_input, decreasing = TRUE)
  
  # Clean gene names
  genes <- gsub("[\\[\\]]", "", data$gene)
  
  # Write gene list to file
  write.table(genes, file = "muhv4_genes.txt", sep = " ")
  
  # Perform GO Enrichment Analysis
  gse_go <- gseGO(geneList = gene_list, 
                   ont = "ALL", 
                   keyType = "SYMBOL", 
                   minGSSize = 3, 
                   maxGSSize = 800, 
                   pvalueCutoff = 0.05, 
                   verbose = TRUE, 
                   OrgDb = organism, 
                   pAdjustMethod = "none")
  
  # Create dotplot for GO analysis
  dotplot(gse_go, showCategory = 10, split = ".sign") + facet_grid(.~.sign)
  ggsave(paste0("dotPlot_", sample_name, "_GO.png"), 
         width = 30, height = 35, units = "cm", 
         path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/GSEA/")
  
  # Create ridgeplot for GO analysis
  ridgeplot(gse_go) + labs(x = "enrichment distribution")
  ggsave(paste0("ridge_", sample_name, "_GO.png"), 
         width = 30, height = 50, units = "cm", 
         path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/GSEA/")
  
  # Map gene symbols to ENTREZ IDs
  ids <- bitr(names(data_input), fromType = "SYMBOL", toType = "ENTREZID", OrgDb = organism)
  dedup_ids <- ids[!duplicated(ids[c("SYMBOL")]), ]
  
  # Filter data based on mapped IDs
  df <- data[data$gene %in% dedup_ids$SYMBOL, ]
  df$Y <- dedup_ids$ENTREZID
  
  # Prepare KEGG gene list
  kegg_gene_list <- df$avg_log2FC
  names(kegg_gene_list) <- df$Y
  kegg_gene_list <- na.omit(kegg_gene_list)
  kegg_gene_list <- sort(kegg_gene_list, decreasing = TRUE)
  
  # Perform KEGG Enrichment Analysis
  gse_kegg <- gseKEGG(geneList = kegg_gene_list, 
                      organism = "mmu", 
                      nPerm = 10000, 
                      minGSSize = 3, 
                      maxGSSize = 800, 
                      pvalueCutoff = 0.05, 
                      pAdjustMethod = "none", 
                      keyType = "ncbi-geneid")
  
  # Create dotplot for KEGG analysis
  dotplot(object = gse_kegg, showCategory = 10, title = "Enriched Pathways", split = ".sign") + facet_grid(.~.sign)
  ggsave(paste0("dotPlot_", sample_name, "_KEGG.png"), 
         width = 30, height = 35, units = "cm", 
         path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/GSEA/")
  ridgeplot(gse_kegg) + labs(x = "enrichment distribution")
  ggsave(paste0("RidgePlot_", sample_name, "_KEGG.png"), 
         width = 30, height = 35, units = "cm", 
         path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/GSEA/")
  
}
```

```{r}
MuHV4_neg <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MuHV4n_filtered.xlsx"

# Analyze GSEA and KEGG pathways
kegg_gene_list <- gsea_GO_KEGG(filename = MuHV4_neg, sample_name = "MuHV4_n", organism = organism)
```

# 12) GSEA of PR8 Ms4a3 -

```{r}
PR8_neg <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PR8n_filtered.xlsx"

# Analyze GSEA and KEGG pathways
kegg_gene_list <- gsea_GO_KEGG(filename = PR8_neg, sample_name = "PR8_n", organism = organism)
```

# 13) GSEA of PR8 Ms4a3 +

```{r}
PR8_pos <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PR8p_filtered.xlsx"

# Analyze GSEA and KEGG pathways
kegg_gene_list <- gsea_GO_KEGG(filename = PR8_pos, sample_name = "PR8_p", organism = organism)
```

# 15) GSEA of PVM Ms4a3 +

```{r}
PVM_pos <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PVMp_filtered.xlsx"

# Analyze GSEA and KEGG pathways
kegg_gene_list <- gsea_GO_KEGG(filename = PVM_pos, sample_name = "PVM_p", organism = organism)
```

# 16) GSEA of PVM Ms4a3 -

```{r}
PVM_neg <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_PVMn_filtered.xlsx"

# Analyze GSEA and KEGG pathways
kegg_gene_list <- gsea_GO_KEGG(filename = PVM_neg, sample_name = "PVM_n", organism = organism)
```

# 17) GSEA of MAV1 Ms4a3 -

```{r}
MAV1_neg <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MAV1n_filtered.xlsx"

# Analyze GSEA and KEGG pathways
kegg_gene_list <- gsea_GO_KEGG(filename = MAV1_neg, sample_name = "MAV1_n", organism = organism)
```

# 18) GSEA of MAV1 Ms4a3 +

```{r}
MAV1_pos <- "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/DEA/h/markers_alveolar_MAV1p_filtered.xlsx"

# Analyze GSEA and KEGG pathways
kegg_gene_list <- gsea_GO_KEGG(filename = MAV1_pos, sample_name = "MAV1_p", organism = organism)
```

# 19) Differential expression DNA viruses RNA viuses

```{r}
# Identify rows with specific virus types (modify as needed)
muhv4_rows <- which(seurat_d60_1_alveolar@meta.data$virus %in% "MuHV4")
mav1_rows <- which(seurat_d60_1_alveolar@meta.data$virus %in% "MAV1")
pr8_rows <- which(seurat_d60_1_alveolar@meta.data$virus %in% "PR8")
pvm_rows <- which(seurat_d60_1_alveolar@meta.data$virus %in% "PVM")
mock_rows <- which(seurat_d60_1_alveolar@meta.data$virus == "Mock")  # Identify Mock rows

# Create logical vectors
is_dna_virus <- logical(length(seurat_d60_1_alveolar@meta.data$virus))
is_rna_virus <- logical(length(seurat_d60_1_alveolar@meta.data$virus))
is_mock <- logical(length(seurat_d60_1_alveolar@meta.data$virus))  # New vector for Mock

# Assign TRUE to corresponding elements in logical vectors
is_dna_virus[muhv4_rows] <- TRUE
is_dna_virus[mav1_rows] <- TRUE

is_rna_virus[pr8_rows] <- TRUE
is_rna_virus[pvm_rows] <- TRUE

is_mock[mock_rows] <- TRUE  # Assign TRUE to Mock rows

# Combine classifications (modify if needed for more categories)
virus_classification <- ifelse(is_dna_virus, "DNA_virus",
                               ifelse(is_rna_virus, "RNA_virus", "Mock"))

# Add the new metadata column
seurat_d60_1_alveolar <- AddMetaData(seurat_d60_1_alveolar, metadata = virus_classification, col.name = "virus_classification")


```

```{r}

```

# 22) Heatmap markers daniel 'clusters_gene_set.xlsx' for full object

```{r}

# load in the marker genes for the different celltypes + initialize as a list
marker_genes <- list(
  Alveolar_Macrophage = c("Chil3", "Fabp5", "Flt1", "Pparg", "Fabp4", "Siglecf", "Car4", "Ear1", "Krt79"),
  Interstitial_Macrophage = c("C1qa", "C1qb", "C1qc", "Pf4", "C5ar1", "Apoe", "Cd14", "Csf1r", "Mafb", "Mrc1", "Folr2", "Lyve1", "Timd4", "H2-Ab1", "Cx3cr1", "CD163"),
  recmacs = c("Ly6c2", "Ccr2", "Cd14", "Fn1", "Vcan", "IL1b", "S100a6", "S100a4", "Apoe", "Mafb", "C5ar1", "Ms4a4c"),
  cDC1 = c("Cd24a", "Itgae", "Xcr1", "Batf3", "Cadm1", "Dpp4", "Zbtb46", "Id2", "Flt3", "Irf8", "Tlr3", "Clec9a", "Cst3", "Wdfy4", "Cxcr3", "Rnase6", "Ccr7", "Ccl5"),
  cDC2 = c("Dpp4", "Zbtb46", "Clec10a", "Ccl17", "Ccl22", "Fabp5", "S100a6", "S100a4", "Flt3", "Irf4", "H2-Ab1", "CD209a", "Ccr7", "Ccl5"),
  cDC2_infected = c("Ifit1", "Ifit1bl1", "Ifit2", "Ifit", "Ifit3b", "Ifi205", "Ifi206", "Rsad2", "Phf1 1d", "Mx1", "Cmpk2", "Helz2"),
  peripheral_DC = c("Siglech", "Ly6d", "Ccr9", "Cox6a2", "Plac8", "Ly6c2", "Tcf4", "Bst2"),
  Activated_Interstitial_Macrophage = c("Ly6c2", "Ccr2", "Cd14", "Fn1", "Vcan", "IL1b", "S100a6", "S100a4", "Apoe", "Mafb", "C5ar1", "Ms4a4c", "Lp1", "Mpeg1", "Clec4n", "Calr", "Siglec1"))

obj.v5@meta.data$markersCelltypes = marker_genes


gene_sets <- unique(Clusters_gene_sets$`Gene sets`)

```

```{r}
library(purrr)

Clusters_gene_sets <- read_excel("Clusters gene sets.xlsx")


# Extract the "Cell type" column from Clusters_gene_sets
cell_types <- Clusters_gene_sets$`Cell type`

# Add "Cell type" as metadata to Seurat object
obj.v5 <- AddMetaData(object =  obj.v5, metadata = list(Cell_Type = (cell_types)))

gene_sets <- unique(Clusters_gene_sets$`Gene sets`)

# Create a factor variable based on unique gene sets
factor_gene_sets <- factor(Clusters_gene_sets$`Gene sets`, levels = gene_sets)
obj.v5 <- AddMetaData(object = obj.v5, metadata = list(Gene_Sets = factor_gene_sets))

unique_gene_sets <- unique(Clusters_gene_sets$`Gene sets`)

obj.v5 |>  as_tibble() |>
  separate(orig.ident, sep = "__", into = c("day", "sample_type"), remove = FALSE) |> 
    mutate(day=str_replace_all(day,c("viral.experiment.1"="d60",
                                                 "viral.experiment.2"="d8") )) |>
  mutate(day=ifelse(condition=="Mock",condition,day)) |> 
    mutate(day=factor(day, levels=c("Mock", "d8","d60")),
         sample_type=as_factor(sample_type),
         condition=as_factor(condition),
         sampletag_Ms4a3=as_factor(sampletag_Ms4a3),
         harmony_cluster_8dims_rough=as_factor(harmony_cluster_8dims_rough)
         ) |> 
  group_by(day,sample_type, condition,sampletag_Ms4a3,harmony_cluster_8dims_rough, Cell_Type) |>
  count(day,sample_type, condition,sampletag_Ms4a3,harmony_cluster_8dims_rough,Cell_Type, .drop = FALSE) |> 
  mutate(sample=paste(day,sample_type,condition,sampletag_Ms4a3)) |> 
  group_by(sample) |>
 
  filter(!(day=="Mock"&(condition %in%c("PR8","MuHV4", "PVM", "MAV1")))) |> 
    mutate(freq_cluster=n/sum(n)) |>
  mutate(condition=as.character(condition)) |> na.omit() |> 
  group_by(harmony_cluster_8dims_rough) |> 
  mutate(cluster_mean_freq=mean(freq_cluster)) |> 
  
 # filter(harmony_cluster_8dims_rough %in% c(7,8,9,10)) |> 
  mutate(cluster_mean_freq_zscore=(freq_cluster-cluster_mean_freq)/sd(freq_cluster)) |> 

  ggplot(aes(Cell_Type,harmony_cluster_8dims_rough, fill=cluster_mean_freq_zscore)) +
  geom_tile()+ 
  ggh4x::facet_nested_wrap(
    vars(sampletag_Ms4a3), nrow = 1,drop = TRUE,scales = "free_x"
  )+theme_bw()+ theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))   + scale_fill_gradient2(  low = "blue",
  mid = "white",
  high = "red")+ggtitle("proportions of cells from a given sample distributed across clusters ",
                        "Ms4a3 classification as sorted")
ggsave(filename = "cellTypesWithMarkerExpressionAcrossClusters.png",path = "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG",  height = 20, width = 50, units = "cm")
```

```{r}
genes_AM <- c("Chil3", "Fabp5", "Flt1", "Pparg", "Fabp4", "Siglecf", "Car4", "Ear1", "Krt79")

plot_heatmap_am = obj.v5 |>
  join_features(genes_AM,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_am_geenomit.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")


```

```{r}
genes_im <- c("C1qa", "C1qb", "C1qc", "Pf4", "C5ar1", "Apoe", "Cd14", "Csf1r", "Mafb", "Mrc1", "Folr2", "Lyve1", "Timd4", "H2-Ab1", "Cx3cr1", "CD163")
plot_heatmap_im = obj.v5 |>
  join_features(genes_im,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_im.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")

```

```{r}
genes_recmacs <- c("Ly6c2", "Ccr2", "Cd14", "Fn1", "Vcan", "IL1b", "S100a6", "S100a4", "Apoe", "Mafb", "C5ar1", "Ms4a4c")
plot_heatmap_recmacs = obj.v5 |>
  join_features(genes_recmacs,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_recmacs.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")
```

```{r}
genes_cDC1 <- c("Cd24a", "Itgae", "Xcr1", "Batf3", "Cadm1", "Dpp4", "Zbtb46", "Id2", "Flt3", "Irf8", "Tlr3", "Clec9a", "Cst3", "Wdfy4", "Cxcr3", "Rnase6", "Ccr7", "Ccl5")
plot_heatmap_cdc1 = obj.v5 |>
  join_features(genes_cDC1,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_cdc1.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")

```

```{r}
genes_cdc2 <- c("Dpp4", "Zbtb46", "Clec10a", "Ccl17", "Ccl22", "Fabp5", "S100a6", "S100a4", "Flt3", "Irf4", "H2-Ab1", "CD209a", "Ccr7", "Ccl5")

plot_heatmap_cdc2 = obj.v5 |>
  join_features(genes_cdc2,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_cdc2.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")
```

```{r}
genes_cdc2_infected <- c("Ifit1", "Ifit1bl1", "Ifit2", "Ifit", "Ifit3b", "Ifi205", "Ifi206", "Rsad2", "Phf1 1d", "Mx1", "Cmpk2", "Helz2")

plot_heatmap_cdc2_infected = obj.v5 |>
  join_features(genes_cdc2_infected,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_cdc2_infected.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")
```

```{r}
genes_pdc <- c("Siglech", "Ly6d", "Ccr9", "Cox6a2", "Plac8", "Ly6c2", "Tcf4", "Bst2")
plot_heatmap_pdc = obj.v5 |>
  join_features(genes_pdc,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_pdc.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")
```

```{r}
genes_activated_im <- c("Ly6c2", "Ccr2", "Cd14", "Fn1", "Vcan", "IL1b", "S100a6", "S100a4", "Apoe", "Mafb", "C5ar1", "Ms4a4c", "Lp1", "Mpeg1", "Clec4n", "Calr", "Siglec1")
plot_heatmap_activatedIM = obj.v5 |>
  join_features(genes_activated_im,assay="RNA", slot="scale.data")  |> 
group_by(.feature,harmony_cluster_8dims_rough) |>
  summarise(mean_scaled_dsb=mean(.abundance_RNA)) |>
  group_by(.feature) |> 
  mutate(zscore_mean_scaled_dsb=(mean_scaled_dsb-mean(mean_scaled_dsb))/sd(mean_scaled_dsb))|> na.omit() |> 
  mutate(zscore_mean_scaled_dsb=ifelse(zscore_mean_scaled_dsb>2,2,
                                       ifelse(zscore_mean_scaled_dsb<(-2),-2,zscore_mean_scaled_dsb))) |> 
  ggplot(aes(.feature,harmony_cluster_8dims_rough, fill=zscore_mean_scaled_dsb)) +
  geom_tile()+ scale_fill_viridis() + theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) 
ggsave("heatmap_daniel_genes_activatedIM.png", width = 20, height = 10, units = "cm", path =  "../../Documents/machiels_lab_viral/28-03_Lucia_presentation_files/heatmap/seuratOG/")
```

```{r}

```
